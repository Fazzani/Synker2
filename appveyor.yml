version: '1.0.{build}'
image: Visual Studio 2017
configuration: Release
branches:
  only:
  - master
  - Develop
init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
  - cmd: pwd
clone_depth: 50
# environment variables
environment:
  nodejs_version: '8'
  ASPNETCORE_ENVIRONMENT: 'Production'
matrix:
  fast_finish: true
install:
  - choco install googlechrome
  - ps: Install-Product node $Env:nodejs_version
  - npm i -g npm@latest
  - npm i -g webpack@latest
before_build:
  # Display .NET Core version
  - cmd: dotnet --version
  # Display minimal restore text
  - cmd: dotnet restore ./WebClient/hfa.WebClient.csproj --verbosity m
  - cmd: dotnet restore ./WebApi/hfa.WebApi.csproj --verbosity m
build_script:
  - cmd: cd ./WebClient/ 
  - cmd: npm install 
  - cmd: npm run configure
  - cmd: dotnet publish -c Release --verbosity m
  - cmd: cd ..
  - cmd: dotnet publish -c Release ./WebApi/hfa.WebApi.csproj --verbosity m
after_build:
  # For once the build has completed
artifacts:
 - path: '\WebApi\bin\Release\netcoreapp2.0\publish'
   name: WebApi
   type: WebDeployPackage
 - path: '\WebClient\bin\Release\netcoreapp2.0\publish'
   name: WebClient
   type: WebDeployPackage
test_script:
  # restore packages for our unit tests
  - cmd: dotnet restore ./hfa.tvhLibrary.test/hfa.tvhLibrary.test.csproj --verbosity m
  - cmd: dotnet restore ./hfa.synker.batch.test/hfa.synker.batch.test.csproj --verbosity m
  # run the unit tests (requires changing into the test directory)
  - cmd: cd ./hfa.tvhLibrary.test/
  - cmd: dotnet xunit
  - cmd: cd ../hfa.synker.batch.test/
  - cmd: dotnet xunit
  - cmd: cd ../WebClient && npm run test:ci
on_finish :
  # any cleanup in here
deploy: off
cache:
  - node_modules -> package-lock.json